# -*- coding: utf-8 -*-

"""
    ontraportlib.controllers.landing_page_controller

    This file was automatically generated by APIMATIC BETA v2.0 on 11/14/2017
"""

from .base_controller import BaseController
from ..api_helper import APIHelper
from ..configuration import Configuration
from ..models.response import Response
from ..exceptions.api_exception import APIException

class LandingPageController(BaseController):

    """A Controller to access Endpoints in the ontraportlib API."""
    

    def get_hosted_url(self,
                       id):
        """Does a GET request to /landingPage/getHostedURL.

        This will grab the permanent URL for a given Landing Page.

        Args:
            id (int): ID of Object.

        Returns:
            Response: Response from the API. Successfully got URL

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _query_builder = Configuration.base_uri
        _query_builder += '/landingPage/getHostedURL'
        _query_url = APIHelper.clean_url(_query_builder)
        _query_parameters = {
            'id': id
        }

        # Prepare headers
        _headers = {
            'accept': 'application/json'
        }

        # Prepare and execute request
        _request = self.http_client.get(_query_url, headers=_headers, query_parameters=_query_parameters)
        _context = self.execute_request(_request)        

        # Endpoint and global error handling using HTTP status codes.
        if _context.response.status_code == 400:
            raise APIException('Error processing transaction', _context)
        self.validate_response(_context)    

        # Return appropriate type
        return APIHelper.json_deserialize(_context.response.raw_body, Response.from_dictionary)
