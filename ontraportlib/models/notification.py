# -*- coding: utf-8 -*-

"""
    ontraportlib.models.notification
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 11/14/2017
"""
import  ontraportlib.models.base_model

class Notification(ontraportlib.models.base_model.BaseModel):

    """Implementation of the 'Notification' model.

    TODO: type model description here.

    Attributes:
        data (string): TODO: type description here.
        id (int): TODO: type description here.
        notification_type (NotificationTypeEnum): TODO: type description
            here.
        mtype (TypeEnum): TODO: type description here.

    """

    def __init__(self, 
                 data = None,
                 id = None,
                 notification_type = None,
                 mtype = None):
        """Constructor for the Notification class"""
        
        # Initialize members of the class
        self.data = data
        self.id = id
        self.notification_type = notification_type
        self.mtype = mtype

        # Create a mapping from Model property names to API property names
        self.names = {
            "data" : "data",
            "id" : "id",
            "notification_type" : "notification_type",
            "mtype" : "type",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            data = dictionary.get("data")
            id = dictionary.get("id")
            notification_type = dictionary.get("notification_type")
            mtype = dictionary.get("type")
            # Return an object of this model
            return cls(data,
                       id,
                       notification_type,
                       mtype)
